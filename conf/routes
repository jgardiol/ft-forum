# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Testing

GET		/testing					controllers.Application.testing

# Forum
GET     /                           controllers.Application.index

GET		/forum/:id					controllers.Application.forum(id: Long, page: Int = 0)
GET		/forum/:id/:page			controllers.Application.forum(id: Long, page: Int)
GET		/thread/:id					controllers.Application.thread(id: Long, page: Int = 0)
GET		/thread/:id/:page			controllers.Application.thread(id: Long, page: Int)

POST	/forum/:id/create			controllers.Application.newthread(id: Long)
POST	/thread/:id/create			controllers.Application.newpost(id: Long)
POST	/thread/:id/delete			controllers.Application.deletethread(id: Long)
POST	/post/:id/edit				controllers.Application.editpost(id: Long)
POST	/post/:id/delete			controllers.Application.deletepost(id: Long)

# Administration
GET		/admin						controllers.Administration.admin
POST	/user/:id					controllers.Administration.updateUser(id: Long)

GET		/admin/forums				controllers.Administration.forumadmin
POST	/forum/:id/upate			controllers.Administration.updateForum(id: Long)
POST	/forum/:id/delete			controllers.Administration.deleteForum(id: Long)
POST	/forum/create				controllers.Administration.createForum

POST	/role/create				controllers.Administration.createRole
POST	/role/delete				controllers.Administration.deleteRole(id: Long)
POST	/role/:id/update			controllers.Administration.updateRole(id: Long)

POST	/permission/create						controllers.Administration.createPermission
POST	/permission/:roleId/:forumId/delete		controllers.Administration.deletePermission(roleId: Long, forumId: Long)
POST	/permission/:roleId/:forumId/update		controllers.Administration.updatePermission(roleId: Long, forumId: Long)

GET		/admin/ranking					controllers.Administration.ranking
POST	/admin/startCrawl				controllers.Administration.startCrawl
POST	/admin/crawlErrors				controllers.Administration.crawlErrors
POST	/admin/crawlerror/delete/:id	controllers.Administration.deleteError(id: Long)
GET		/admin/getGuilds				controllers.Administration.getPlayerGuilds

GET		/admin/crawlStatus				controllers.Administration.crawlStatus


# Authentication
GET		/logout						controllers.Application.logout
POST	/login						controllers.Application.login
POST	/signup						controllers.Application.signup

# Ranking
GET		/rankings							controllers.Ranking.rankings(boss: String = "Immerseus", difficulty: String = "10H", spec: String = "all")
GET		/rankings/:boss/:difficulty			controllers.Ranking.rankings(boss: String, difficulty: String, spec: String = "all")
GET		/rankings/:boss/:difficulty/:spec	controllers.Ranking.rankings(boss: String, difficulty: String, spec: String)

GET		/player/:name						controllers.Ranking.player(name: String, boss: String = "Immerseus", difficulty: String = "10H", spec: String = "all")
GET		/player/:name/:boss/:difficulty/:spec		controllers.Ranking.player(name: String, boss: String, difficulty: String, spec: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
